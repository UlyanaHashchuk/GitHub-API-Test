{"version":3,"sources":["App/index.styles.js","contexts/ProfDetailsContext/index.js","redux/reducers.js","redux/store.js","redux/actions.js","components/Header/index.styles.js","components/Header/index.js","pages/search-page/components/SearchForm/index.styles.js","pages/search-page/components/SearchForm/index.js","pages/search-page/components/ProfileDetails/index.styles.js","pages/search-page/components/ProfileDetails/index.js","pages/search-page/index.jsx","pages/repos-page/components/PublicRepos/index.styles.js","pages/repos-page/components/PublicRepos/index.jsx","pages/repos-page/index.jsx","pages/repodetails-page/ApiFetch/index.js","pages/repodetails-page/index.styles.js","pages/repodetails-page/index.jsx","App/index.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","React","createContext","initialState","loading","details","error","store","createStore","state","action","type","applyMiddleware","thunk","Heading","styled","div","BackToHome","a","href","Form","form","Label","label","Input","input","Button","button","onSubmit","useState","userName","setUserName","setError","validateInputValue","value","match","length","event","preventDefault","fetch","then","resp","json","jsonResp","onChange","target","placeholder","disabled","Profile","Info","Image","img","Name","Bio","RepoInfo","RepoTitle","avatar_url","name","bio","public_repos","alt","src","to","useContext","ProfDetailsContext","profDetails","setProfDetails","SearchForm","newDetails","ProfileDetails","RepoSearch","RepoInput","CheckboxLabel","Checkbox","Container","Grid","RepoBox","RepoName","Language","Stars","Details","compareStars","starA","stars","starB","reposUrl","publicRepos","setPublicRepos","isChecked","setIsChecked","searchInput","setSearchInput","isLoading","setIsLoading","useEffect","Promise","resolve","map","repo","key","id","stargazers_count","language","url","html_url","login","owner","loadPublicRepos","checked","filteredRepos","sort","filter","toLowerCase","includes","getFilteredRepos","repos_url","PublicRepos","handleErrors","response","ok","Error","statusText","Title","h3","Clone","Code","code","Homepage","Date","connect","dispatch","fetchDetails","props","res","catch","fetchDetailsFailure","fetchDetailsAction","params","message","clone_url","created_at","homepage","Header","Provider","exact","path","component","RepoDetails","Boolean","window","location","hostname","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.93fb520a.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    box-sizing: border-box; \r\n    margin: 0px; \r\n    padding: 0px;\r\n    font-family: Arial;\r\n  }\r\n  a, div {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import React from 'react'\r\n\r\nexport default React.createContext({})\r\n","import {\r\n  FETCH_DETAILS_BEGIN,\r\n  FETCH_DETAILS_SUCCESS,\r\n  FETCH_DETAILS_FAILURE,\r\n} from './actions'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  details: [],\r\n  error: null,\r\n}\r\n\r\nexport function reducers(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_DETAILS_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      }\r\n    case FETCH_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        details: [action.details],\r\n      }\r\n    case FETCH_DETAILS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n        details: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reducers } from './reducers'\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport default store\r\n","export const FETCH_DETAILS_BEGIN = 'FETCH_DETAILS_BEGIN'\r\nexport const FETCH_DETAILS_SUCCESS = 'FETCH_DETAILS_SUCCESS'\r\nexport const FETCH_DETAILS_FAILURE = 'FETCH_DETAILS_FAILURE'\r\n\r\nexport const fetchDetailsBegin = () => ({\r\n  type: FETCH_DETAILS_BEGIN,\r\n})\r\n\r\nexport const fetchDetailsSuccess = (details) => ({\r\n  type: FETCH_DETAILS_SUCCESS,\r\n  details: details,\r\n})\r\n\r\nexport const fetchDetailsFailure = (error) => ({\r\n  type: FETCH_DETAILS_FAILURE,\r\n  error: error,\r\n})\r\n","import styled from 'styled-components'\r\n\r\nconst Heading = styled.div`\r\n  background-color: #20232a;\r\n  color: white;\r\n  padding: 10px;\r\n  font-size: 25px;\r\n  padding-left: 50px;\r\n`\r\n\r\nconst BackToHome = styled.a`\r\n  color: white;\r\n\r\n  &:hover {\r\n    color: #ccc;\r\n  }\r\n`\r\n\r\nexport { Heading, BackToHome }\r\n","import React from 'react'\r\nimport { Heading, BackToHome } from './index.styles'\r\n\r\nexport default () => (\r\n  <Heading>\r\n    <BackToHome href=\"/GitHub-API-Test/\">GitHub API Test</BackToHome>\r\n  </Heading>\r\n)\r\n","import styled from 'styled-components'\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst Label = styled.label`\r\n  font-size: 20px;\r\n  margin: 25px;\r\n  border-bottom: 1px solid #ccc;\r\n`\r\n\r\nconst Input = styled.input`\r\n  border: 2px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  padding: 5px 10px;\r\n`\r\n\r\nconst Button = styled.button`\r\n  margin: 15px;\r\n  padding: 10px 15px;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  outline: none;\r\n  color: #fff;\r\n  background-color: #79b6f2;\r\n  border: none;\r\n  border-radius: 11px;\r\n  box-shadow: 0 5px #999;\r\n\r\n  &:hover {\r\n    background-color: #4d92d6;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #3d6fa1;\r\n    box-shadow: 0 2px #666;\r\n    transform: translateY(3px);\r\n  }\r\n`\r\n\r\nexport { Form, Label, Input, Button }\r\n","import React, { useState } from 'react'\r\nimport { Form, Label, Input, Button } from './index.styles'\r\n\r\nexport default ({ onSubmit }) => {\r\n  const [userName, setUserName] = useState('')\r\n  const [error, setError] = useState()\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    if (!validateInputValue(userName)) {\r\n      fetch(`https://api.github.com/users/${userName}`).then((resp) =>\r\n        resp.json().then((jsonResp) => {\r\n          onSubmit(jsonResp)\r\n          setUserName('')\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  const validateInputValue = (value) => {\r\n    if (!value || value === '') {\r\n      setError('required')\r\n      return true\r\n    } else if (!value.match(/^[A-z|0-9]+[A-z|0-9|-]*$/g)) {\r\n      setError('wrongFormat')\r\n      return true\r\n    } else if (value.length > 39) {\r\n      setError('exceededSize')\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  const onChange = ({ target: { value } }) => {\r\n    setError(null)\r\n\r\n    return setUserName(value)\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label>Enter GitHub user profile name</Label>\r\n      <Input\r\n        type=\"text\"\r\n        value={userName}\r\n        onChange={onChange}\r\n        placeholder=\"Profile name...\"\r\n      />\r\n      {error === 'required' && <>Value is required</>}\r\n      {error === 'wrongFormat' && <>Name should be in format [A-z|0-9|-]</>}\r\n      {error === 'exceededSize' && (\r\n        <>Name length should be between 1 and 39 characters</>\r\n      )}\r\n      <Button type=\"submit\" disabled={!!error}>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Profile = styled.div`\r\n  display: flex;\r\n  margin: 15px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 20px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 10px 0 0 0;\r\n  }\r\n`\r\n\r\nconst Image = styled.img`\r\n  width: 200px;\r\n  border-radius: 50%;\r\n`\r\n\r\nconst Name = styled.div`\r\n  font-size: 26px;\r\n  color: #24292e;\r\n`\r\n\r\nconst Bio = styled.div`\r\n  font-size: 14px;\r\n  text-align: center;\r\n  color: #666666;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nconst RepoInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  color: #24292e;\r\n  font-size: 18px;\r\n\r\n  &:hover {\r\n    color: #4d92d6;\r\n  }\r\n`\r\n\r\nconst RepoTitle = styled.div`\r\n  font-size: 13px;\r\n`\r\n\r\nexport { Profile, Image, Info, Name, Bio, RepoInfo, RepoTitle }\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Profile,\r\n  Image,\r\n  Info,\r\n  Name,\r\n  Bio,\r\n  RepoInfo,\r\n  RepoTitle,\r\n} from './index.styles'\r\n\r\nexport default ({ avatar_url, name, bio, public_repos }) => (\r\n  <Profile>\r\n    <Image alt=\"avatar\" src={avatar_url} />\r\n    <Info>\r\n      <Name>{name}</Name>\r\n      <Bio>{bio}</Bio>\r\n      <Link to=\"/GitHub-API-Test/publicrepos\">\r\n        <RepoInfo>\r\n          <strong>{public_repos}</strong>\r\n          <RepoTitle>Public Repositories</RepoTitle>\r\n        </RepoInfo>\r\n      </Link>\r\n    </Info>\r\n  </Profile>\r\n)\r\n","import React from 'react'\r\nimport SearchForm from './components/SearchForm'\r\nimport ProfileDetails from './components/ProfileDetails'\r\nimport ProfDetailsContext from '../../contexts/ProfDetailsContext'\r\n\r\nexport default () => {\r\n  const { profDetails, setProfDetails } = React.useContext(ProfDetailsContext)\r\n\r\n  const addNewDetails = (newDetails) => {\r\n    setProfDetails(newDetails)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SearchForm onSubmit={addNewDetails} />\r\n      {profDetails && <ProfileDetails {...profDetails} />}\r\n    </>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst RepoSearch = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst RepoInput = styled.input`\r\n  border: 2px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  padding: 5px 10px;\r\n`\r\nconst CheckboxLabel = styled.label`\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  color: #4d92d6;\r\n  margin: 5px 0 10px 0;\r\n`\r\n\r\nconst Checkbox = styled.input`\r\n  width: 17px;\r\n  color: #4d92d6;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  @media screen and (max-width: 1100px) {\r\n    min-width: 80%;\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nconst RepoBox = styled.div`\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  word-wrap: break-word;\r\n  width: 21%;\r\n  min-width: 250px;\r\n  margin: 15px;\r\n  padding: 5px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media screen and (max-width: 1100px) {\r\n    min-width: 40%;\r\n  }\r\n`\r\n\r\nconst RepoName = styled.a`\r\n  font-size: 20px;\r\n  color: #24292e;\r\n\r\n  &:hover {\r\n    color: #4d92d6;\r\n  }\r\n`\r\n\r\nconst Language = styled.div`\r\n  color: #666666;\r\n  font-size: 12px;\r\n  margin-top: 5px;\r\n`\r\n\r\nconst Stars = styled.div`\r\n  color: #4d92d6;\r\n`\r\n\r\nconst Details = styled.div`\r\n  padding-top: 10px;\r\n  color: #24292e;\r\n\r\n  &:hover {\r\n    color: #4d92d6;\r\n  }\r\n`\r\n\r\nexport {\r\n  RepoSearch,\r\n  RepoInput,\r\n  CheckboxLabel,\r\n  Checkbox,\r\n  Container,\r\n  Grid,\r\n  RepoName,\r\n  Language,\r\n  Stars,\r\n  RepoBox,\r\n  Details,\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Label } from '../../../search-page/components/SearchForm/index.styles'\r\nimport {\r\n  RepoSearch,\r\n  RepoInput,\r\n  CheckboxLabel,\r\n  Checkbox,\r\n  Container,\r\n  Grid,\r\n  RepoName,\r\n  Language,\r\n  Stars,\r\n  RepoBox,\r\n  Details,\r\n} from './index.styles'\r\n\r\nconst loadPublicRepos = (reposUrl) =>\r\n  new Promise((resolve) => {\r\n    fetch(reposUrl).then((resp) =>\r\n      resp.json().then((jsonResp) =>\r\n        resolve(\r\n          jsonResp.map((repo) => ({\r\n            name: repo.name,\r\n            key: repo.id,\r\n            stars: repo.stargazers_count,\r\n            language: repo.language,\r\n            url: repo.html_url,\r\n            login: repo.owner.login,\r\n          }))\r\n        )\r\n      )\r\n    )\r\n  })\r\n\r\nconst compareStars = ({ stars: starA }, { stars: starB }) => {\r\n  if (starA < starB) {\r\n    return 1\r\n  }\r\n  if (starA > starB) {\r\n    return -1\r\n  }\r\n  return 0\r\n}\r\n\r\nexport default ({ reposUrl }) => {\r\n  const [publicRepos, setPublicRepos] = useState([])\r\n  const [isChecked, setIsChecked] = useState(false)\r\n  const [searchInput, setSearchInput] = useState('')\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    loadPublicRepos(reposUrl).then((publicRepos) => {\r\n      setPublicRepos(publicRepos)\r\n      setIsLoading(false)\r\n    })\r\n  }, [reposUrl])\r\n\r\n  const getFilteredRepos = () => {\r\n    let filteredRepos = [...publicRepos]\r\n\r\n    if (isChecked) {\r\n      filteredRepos = filteredRepos.sort(compareStars)\r\n    }\r\n\r\n    if (searchInput !== '') {\r\n      filteredRepos = filteredRepos.filter(({ name }) =>\r\n        name.toLowerCase().includes(searchInput.toLowerCase())\r\n      )\r\n    }\r\n\r\n    return filteredRepos\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <RepoSearch>\r\n        <Label>Search repository by name</Label>\r\n        <RepoInput\r\n          type=\"text\"\r\n          value={searchInput}\r\n          onChange={({ target: { value } }) => setSearchInput(value)}\r\n          placeholder=\"Repository name...\"\r\n        />\r\n        <CheckboxLabel>\r\n          <Checkbox\r\n            type=\"checkbox\"\r\n            checked={isChecked}\r\n            onChange={() => setIsChecked(!isChecked)}\r\n          />\r\n          Sort by stars\r\n        </CheckboxLabel>\r\n      </RepoSearch>\r\n      {isLoading && <div>Loading...</div>}\r\n      <Container>\r\n        <Grid>\r\n          {getFilteredRepos().map(\r\n            ({ name, url, key, language, stars, login }) => (\r\n              <RepoBox key={key}>\r\n                <RepoName href={url} target=\"_blank\">\r\n                  {name}\r\n                </RepoName>\r\n                <Stars>☆{stars}</Stars>\r\n                <Language>{language}</Language>\r\n                <Link to={`/GitHub-API-Test/${login}/${name}`}>\r\n                  <Details>◦◦◦</Details>\r\n                </Link>\r\n              </RepoBox>\r\n            )\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ProfDetailsContext from '../../contexts/ProfDetailsContext'\r\nimport PublicRepos from './components/PublicRepos'\r\n\r\nexport default () => {\r\n  const { profDetails } = React.useContext(ProfDetailsContext)\r\n\r\n  if (!profDetails) {\r\n    return <Redirect to=\"/GitHub-API-Test/\" />\r\n  }\r\n\r\n  const { repos_url } = profDetails\r\n\r\n  return <PublicRepos reposUrl={repos_url} />\r\n}\r\n","import {\r\n  fetchDetailsBegin,\r\n  fetchDetailsSuccess,\r\n  fetchDetailsFailure,\r\n} from '../../../redux/actions'\r\n\r\nexport const fetchDetailsAction = ({ login, name }) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchDetailsBegin())\r\n    fetch(`https://api.github.com/repos/${login}/${name}`)\r\n      .then(handleErrors)\r\n      .then((res) => res.json())\r\n      .then((jsonResp) => {\r\n        dispatch(fetchDetailsSuccess(jsonResp))\r\n        return jsonResp\r\n      })\r\n      .catch((error) => dispatch(fetchDetailsFailure(error)))\r\n  }\r\n}\r\n\r\nconst handleErrors = (response) => {\r\n  if (!response.ok) {\r\n    throw Error(response.statusText)\r\n  }\r\n  return response\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: #24292e;\r\n`\r\n\r\nconst Title = styled.h3`\r\n  margin: 15px;\r\n  padding: 10px;\r\n  color: #fff;\r\n  background-color: #20232a;\r\n  border-radius: 7px;\r\n`\r\n\r\nconst Clone = styled.div`\r\n  margin: 10px 0;\r\n`\r\n\r\nconst Code = styled.code`\r\n  background-color: #24292e;\r\n  color: #fff;\r\n  border-radius: 3px;\r\n  padding: 5px;\r\n`\r\n\r\nconst Homepage = styled.a`\r\n  color: #20232a;\r\n\r\n  &:hover {\r\n    color: #4d92d6;\r\n  }\r\n`\r\n\r\nconst Date = styled.div`\r\n  font-size: 12px;\r\n  margin-top: 15px;\r\n  padding-top: 5px;\r\n  text-align: right;\r\n  border-top: 1px solid #20232a;\r\n`\r\n\r\nexport { Container, Title, Date, Clone, Code, Homepage }\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchDetailsAction } from './ApiFetch'\r\nimport { Container, Title, Date, Clone, Code, Homepage } from './index.styles'\r\nimport {\r\n  RepoName,\r\n  Language,\r\n  Stars,\r\n} from '../repos-page/components/PublicRepos/index.styles'\r\n\r\nconst RepoDetails = ({\r\n  error,\r\n  loading,\r\n  details,\r\n  fetchDetails,\r\n  match: { params },\r\n}) => {\r\n  const { login, name } = params\r\n\r\n  useEffect(() => fetchDetails({ login, name }), [])\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n  if (error) {\r\n    return <div>Error! {error.message}</div>\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Repository details:</Title>\r\n      {details.map(\r\n        ({\r\n          id,\r\n          name,\r\n          stargazers_count,\r\n          html_url,\r\n          clone_url,\r\n          created_at,\r\n          language,\r\n          homepage,\r\n        }) => (\r\n          <div key={id}>\r\n            <RepoName href={html_url} target=\"_blank\">\r\n              {name}\r\n            </RepoName>\r\n            <Language>{language}</Language>\r\n            <Stars>☆{stargazers_count}</Stars>\r\n            <Clone>\r\n              Clone url: <Code>{clone_url}</Code>\r\n            </Clone>\r\n            <Homepage href={homepage} target=\"_blank\">\r\n              {homepage}\r\n            </Homepage>\r\n            <Date>Created: {created_at}</Date>\r\n          </div>\r\n        )\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.loading,\r\n  details: state.details,\r\n  error: state.error,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchDetails: (props) => dispatch(fetchDetailsAction(props)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RepoDetails)\r\n","import React, { useState } from 'react'\r\nimport GlobalStyle from './index.styles'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport ProfDetailsContext from '../contexts/ProfDetailsContext'\r\nimport { Provider } from 'react-redux'\r\nimport store from '../redux/store'\r\nimport Header from '../components/Header'\r\nimport SearchPage from '../pages/search-page'\r\nimport ReposPage from '../pages/repos-page'\r\nimport RepoDetails from '../pages/repodetails-page'\r\n\r\nexport default () => {\r\n  const [profDetails, setProfDetails] = useState(null)\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Header />\r\n      <ProfDetailsContext.Provider value={{ profDetails, setProfDetails }}>\r\n        <Provider store={store}>\r\n          <Router>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/GitHub-API-Test/:login/:name\"\r\n                component={RepoDetails}\r\n              />\r\n              <Route exact path=\"/GitHub-API-Test/publicrepos\">\r\n                <ReposPage />\r\n              </Route>\r\n              <Route path=\"/GitHub-API-Test/\">\r\n                <SearchPage />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </Provider>\r\n      </ProfDetailsContext.Provider>\r\n    </>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}